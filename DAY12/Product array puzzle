class Solution 
{ 
    public static long[] productExceptSelf(int nums[], int n) 
    { 
        if (n == 0) return new long[0];
        long[] left = new long[n];
        long[] right = new long[n];
        long[] P = new long[n];
        left[0] = 1;
        for (int i = 1; i < n; i++) {
            left[i] = left[i - 1] * nums[i - 1];
        }
        right[n - 1] = 1;
        for (int i = n - 2; i >= 0; i--) {
            right[i] = right[i + 1] * nums[i + 1];
        }
        for (int i = 0; i < n; i++) {
            P[i] = left[i] * right[i];
        }
        return P;
    } 
    public static void main(String[] args) {
        Solution ob = new Solution();
        int[] array = {1, 2, 3, 4};
        int n = array.length;
        long[] ans = ob.productExceptSelf(array, n);
        for (long num : ans) {
            System.out.print(num + " ");
        }
    }
}
